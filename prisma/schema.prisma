// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  name        String
  phone       String?  // Keep this field to prevent data loss
  password    String
  role        Role     @default(USER)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  bookings    Booking[]
}

model Package {
  id           String   @id @default(cuid())
  title        String
  description  String
  price        Float
  duration     String
  location     String
  imageUrl     String
  highlights   String?  // JSON string
  itinerary    String?  // JSON string
  type         String?
  transportation String?
  pickupPoints String?  // JSON string
  popular      Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  bookings     Booking[]
}

model Booking {
  id           String        @id @default(cuid())
  userId       String
  packageId    String?       // Optional for service bookings
  totalAmount  Float
  paidAmount   Float         @default(0)
  status       BookingStatus @default(PENDING)
  travelDate   DateTime
  numberOfPeople Int
  specialRequests String?
  razorpayOrderId String?
  razorpayPaymentId String?
  razorpaySignature String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  package      Package?      @relation(fields: [packageId], references: [id], onDelete: Cascade)
}

model Setting {
  id    String @id @default(cuid())
  key   String @unique
  value String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model FormResponse {
  id          String   @id @default(cuid())
  type        String   // 'contact', 'inquiry', 'booking', etc.
  name        String
  email       String
  phone       String?
  subject     String?
  message     String
  data        String?  // JSON string for additional form data
  status      String   @default("NEW") // NEW, READ, REPLIED, CLOSED
  priority    String   @default("NORMAL") // LOW, NORMAL, HIGH, URGENT
  assignedTo  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}
